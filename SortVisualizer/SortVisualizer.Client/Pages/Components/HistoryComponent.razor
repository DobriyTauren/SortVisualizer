@rendermode InteractiveWebAssembly
@inject IJSRuntime JSRuntime
@inject UserDataStorage userData

<div class="block-bg-color mt-3 p-3 bdr">
    <div class="table-responsive">
        <table class="table table-hover table-dark">
            <thead>
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">Алгоритм</th>
                    <th scope="col">Тип</th>
                    <th scope="col">Обращений</th>
                    <th scope="col">Перемещений</th>
                    <th scope="col">Время</th>
                    <th scope="col">Задержка</th>
                    <th scope="col">Элементов</th>
                </tr>
            </thead>
            <tbody>
                @if (userData.Algorithms.Count != 0)
                {
                    for (int i = 0; i < userData.UserHistories.Count; i++)
                    {
                        var algorithm = userData.Algorithms.FirstOrDefault(a => a.Id == userData.UserHistories[i].AlgorithmId);
                        var history = userData.UserHistories[i];

                        <tr>
                            <th scope="row">@(i + 1)</th>
                            <td>@(algorithm != null ? algorithm.Name : "Неизвестный")</td>
                            <td>@if (history.VisualizationType == VisualizationType.Line)
                                {
                                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="white" class="bi bi-file-bar-graph" viewBox="0 0 16 16">
                                        <path d="M4.5 12a.5.5 0 0 1-.5-.5v-2a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-.5.5zm3 0a.5.5 0 0 1-.5-.5v-4a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5zm3 0a.5.5 0 0 1-.5-.5v-6a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-.5.5z" />
                                        <path d="M4 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2zm0 1h8a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1" />
                                    </svg>
                                }
                                else
                                {
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="white" class="bi bi-circle" viewBox="0 0 16 16">
                                        <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16" />
                                    </svg>
                                }
                            </td>
                            <td>@history.ArrayAccessCount</td>
                            <td>@history.MoveCount</td>
                            <td>@history.TimeWasted</td>
                            <td>@($"{history.Delay} мс")</td>
                            <td>@history.ElementsCount</td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>

@code
{
    private SaveAPI _saveAPI;
    private string _userId;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _userId = await userData.GetUserId(JSRuntime);
            _saveAPI = new SaveAPI(userData);
            await _saveAPI.TryGetHistory(_userId);

            userData.HistoryChanged += HandleStateChanged;
            userData.AlgorithmsChanged += HandleStateChanged;

            StateHasChanged();
        }
    }

    private void HandleStateChanged(object sender, EventArgs e)
    {
        StateHasChanged();
    }
}