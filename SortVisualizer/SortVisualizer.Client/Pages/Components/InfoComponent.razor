@rendermode InteractiveWebAssembly
@inject UserDataStorage userData
@inject NavigationManager navigationManager

<div class="component-container bdr block-bg-color pt-4 px-3 pb-3 top-block">
    <div role="button" class="row user-select-none" @onclick="@(() => {_isHidden = !_isHidden;})">
        <h3 class="col">@_selectedAlgorithm.Name</h3>

        <span style="color:lightgray;" class="col-6 align-self-center text-end">
            @(_isHidden ? "(Нажмите, чтобы развернуть)" : "(Нажмите, чтобы свернуть)")
        </span>
    </div>

    <p hidden="@_isHidden">
        @_selectedAlgorithm.Description
    </p>
</div>

@code
{
    [Parameter]
    public SortAlgorithm Algorithm { get; set; } = null!;

    private SaveAPI _saveAPI;
    private AlgorithmModel? _selectedAlgorithm = new AlgorithmModel() { Name = "", Description = "", CodeName = "" };

    private bool _isHidden = true;

    protected override async Task OnInitializedAsync()
    {
        _saveAPI = new SaveAPI(userData, navigationManager);

        _selectedAlgorithm = await _saveAPI.TryGetAlgorithmsWithSelected();
        userData.CurrentAlgorithm = _selectedAlgorithm;

        if (_selectedAlgorithm == null) // if alg not exists in db
        {
            _selectedAlgorithm = new AlgorithmModel()
            {
                Name = "Не найдено...",
                Description = "Не найдено...",
                CodeName = "Не найдено...",
            };
        }
    }
}