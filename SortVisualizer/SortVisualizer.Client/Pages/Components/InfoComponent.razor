@rendermode InteractiveWebAssembly
@inject GlobalData globalData
@inject NavigationManager navigationManager

<div class="component-container text-light">
    <div role="button" class="row user-select-none" @onclick="@(() => {_isHidden = !_isHidden;})">
        <h3 class="col">@_selectedAlgorithm.Name</h3>

        <span style="color:lightgray;" class="col-6 align-self-center text-end">
            @(_isHidden ? "(Нажмите, чтобы развернуть)" : "(Нажмите, чтобы свернуть)")
        </span>
    </div>

    <p hidden="@_isHidden">
        @_selectedAlgorithm.Description
    </p>
</div>

@code
{
    [Parameter]
    public SortAlgorithm Algorithm { get; set; } = null!;

    private AlgorithmModel? _selectedAlgorithm = new AlgorithmModel() { Name = "", Description = "", CodeName = "" };

    private HttpClient _httpClient = new HttpClient() { BaseAddress = new Uri("https://localhost:7248/") };

    private bool _isHidden = true;

    protected override async Task OnInitializedAsync()
    {
        try // PEREDELAT
        {
            if (globalData.Algorithms == null)
            {
                globalData.Algorithms = await _httpClient.GetFromJsonAsync<List<AlgorithmModel>>("api/algorithms");
            }

            string relativePath = navigationManager.ToBaseRelativePath(navigationManager.Uri);

            _selectedAlgorithm = globalData.Algorithms.FirstOrDefault(a => a.CodeName == relativePath);
        }
        catch
        {
            _httpClient = new HttpClient();
            _httpClient.BaseAddress = new Uri("http://localhost:7248/");

            if (globalData.Algorithms == null)
            {
                globalData.Algorithms = await _httpClient.GetFromJsonAsync<List<AlgorithmModel>>("api/algorithms");
            }

            string relativePath = navigationManager.ToBaseRelativePath(navigationManager.Uri);

            _selectedAlgorithm = globalData.Algorithms.FirstOrDefault(a => a.CodeName == relativePath);  
        }

        if (_selectedAlgorithm == null) // if alg not exists in db
        {
            _selectedAlgorithm = new AlgorithmModel()
                {
                    Name = "Не найдено...",
                    Description = "Не найдено...",
                    CodeName = "Не найдено...",
                };
        }
    }
}