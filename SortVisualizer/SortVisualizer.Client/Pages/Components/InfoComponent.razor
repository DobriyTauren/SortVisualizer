@inject UserDataStorage userData
@inject NavigationManager navigationManager

@rendermode InteractiveWebAssembly

<div class="component-container bdr block-bg-color pt-4 px-3 pb-3 top-block">
    <div role="button" class="row user-select-none" @onclick="@(() => {_isHidden = !_isHidden;})">
        <h3 class="col">
            @if (userData.CurrentAlgorithm != null)
            {
                @userData.CurrentAlgorithm.Name
            }
        </h3>

        <span style="color:lightgray;" class="col-6 align-self-center text-end">
            @(_isHidden ? "(Нажмите, чтобы развернуть)" : "(Нажмите, чтобы свернуть)")
        </span>
    </div>

    <p hidden="@_isHidden">
        @if (userData.CurrentAlgorithm != null)
        {
            @userData.CurrentAlgorithm.Description
        }
    </p>
</div>


@code
{
    [Parameter]
    public SortAlgorithm Algorithm { get; set; } = null!;

    private APIHandler _api = new();

    private bool _isHidden = true;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await _api.CheckForAlgorithms(userData, navigationManager);

            StateHasChanged();
        }
    }
}