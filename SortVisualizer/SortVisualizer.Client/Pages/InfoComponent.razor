@rendermode InteractiveWebAssembly

<div class="component-container text-light">
    <div role="button" class="row user-select-none" @onclick="@(() => {isHidden = !isHidden;})">
        <h3 class="col">Пузырьковая сортировка</h3>

        <span style="color:lightgray;" class="col-6 align-self-center text-end">
            @(isHidden ? "(Нажмите, чтобы развернуть)" : "(Нажмите, чтобы свернуть)")
        </span>
    </div>


    <p hidden="@isHidden">
        По сравнению с другими алгоритмами считается простейшим для понимания и реализации. Эффективен для массивов небольшого размера.

        Выполняется некоторое количество проходов по массиву — начиная от начала массива, перебираются пары соседних элементов массива. Если 1-й элемент пары больше 2-го, элементы переставляются.
        Пары элементов массива перебираются либо n − 1 раз, либо до тех пор, пока на очередном проходе не обнаружится, что более не требуется выполнять перестановки (массив отсортирован).
        При каждом проходе алгоритма по внутреннему циклу очередной наибольший элемент массива ставится на своё место в конце массива рядом с предыдущим «наибольшим элементом», а наименьший элемент перемещается на одну позицию к началу массива (как бы «всплывает» до нужной позиции, как пузырёк в воде — откуда и название алгоритма).

        n — размер массива, количество элементов массива.
        Сложность алгоритма: O (n^2).
    </p>
</div>

@code 
{
    private bool isHidden = true;
}